services:
  backend-dev:
    build:
      context: .
      dockerfile: dev.Dockerfile
    command: npm run dev
    ports:
      - '3000:3000'
    volumes:
      - ./:/usr/src/app
      - node_modules:/usr/src/app/node_modules
    container_name: backend-dev
    environment:
      - DOCKER=true
    networks:
      - dev-network
    depends_on:
      - db

  db:
    image: postgres:16-bookworm
    restart: unless-stopped
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    container_name: db-postgres
    volumes:
      - ./data/dev:/var/lib/postgresql/data
    networks:
      - dev-network
    ports:
      - '127.0.0.1:5432:5432'

  frontend-dev:
    build:
      context: ../frontend
      dockerfile: dev.Dockerfile
    command: npm run dev -- --host
    volumes:
      - ../frontend:/usr/src/app
    networks:
      - dev-network
    environment:
      - VITE_NGINX=true
      - VITE_NGINX_BACKEND_URL=${VITE_NGINX_BACKEND_URL}
      - VITE_LOCAL_BACKEND_URL=${VITE_LOCAL_BACKEND_URL}

    ports:
      - '5173:5173'

  nginx:
    image: nginx:alpine-slim
    volumes:
      - ./nginx.dev.conf:/etc/nginx/nginx.conf:ro
    ports:
      - '8080:80'
    container_name: nginx
    networks:
      - dev-network
    depends_on:
      - backend-dev
      - frontend-dev

volumes:
  node_modules:

networks:
  dev-network:
    name: dev-network
